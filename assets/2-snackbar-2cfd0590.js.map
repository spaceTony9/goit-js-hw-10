{"version":3,"file":"2-snackbar-2cfd0590.js","sources":["../../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\nconst submitBtn = document.querySelector('button[type=\"submit]\"');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst fulfilledBtn = document.querySelector('input[value=\"fulfilled\"]');\nconst rejectedBtn = document.querySelector('input[value=\"rejected\"]');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  if (delayInput.value !== '') {\n    // delay input field validation\n    if (fulfilledBtn.checked || rejectedBtn.checked) {\n      //radio buttons validation\n      const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n          if (fulfilledBtn.checked === true) {\n            resolve(delayInput.value);\n          } else {\n            reject(delayInput.value);\n          }\n        }, delayInput.value);\n      });\n      promise\n        .then(fulfilledValue => {\n          iziToast.show({\n            title: '',\n            messageColor: 'white',\n            message: `✅ Fulfilled promise in ${fulfilledValue}ms`,\n            messageSize: '20',\n            backgroundColor: '#3cb371',\n            position: 'topRight',\n            resetOnHover: true,\n            timeout: 3000,\n          });\n        })\n        .catch(rejectedValue => {\n          iziToast.show({\n            title: '',\n            messageColor: 'white',\n            message: `❌ Rejected promise in ${rejectedValue}ms`,\n            messageSize: '20',\n            backgroundColor: '#cd5c5c',\n            position: 'topRight',\n            timeout: 3000,\n          });\n        });\n    } else {\n      // radio buttons are not selected\n      iziToast.show({\n        message: `⚠️ One of the buttons must be checked. Try again!`,\n        backgroundColor: 'orange',\n        messageColor: 'white',\n        messageSize: '20',\n        position: 'topRight',\n      });\n    }\n  } else {\n    // delay input is empty\n    iziToast.show({\n      message: `⚠️ Delay field must be filled. Try again!`,\n      backgroundColor: 'orange',\n      messageColor: 'white',\n      messageSize: '20',\n      position: 'topRight',\n    });\n  }\n});\n\n"],"names":["form","delayInput","fulfilledBtn","rejectedBtn","e","resolve","reject","fulfilledValue","iziToast","rejectedValue"],"mappings":"yCAGA,MAAMA,EAAO,SAAS,cAAc,OAAO,EACzB,SAAS,cAAc,uBAAuB,EAChE,MAAMC,EAAa,SAAS,cAAc,qBAAqB,EACzDC,EAAe,SAAS,cAAc,0BAA0B,EAChEC,EAAc,SAAS,cAAc,yBAAyB,EAEpEH,EAAK,iBAAiB,SAAUI,GAAK,CACnCA,EAAE,eAAc,EACZH,EAAW,QAAU,GAEnBC,EAAa,SAAWC,EAAY,QAEtB,IAAI,QAAQ,CAACE,EAASC,IAAW,CAC/C,WAAW,IAAM,CACXJ,EAAa,UAAY,GAC3BG,EAAQJ,EAAW,KAAK,EAExBK,EAAOL,EAAW,KAAK,CAEnC,EAAWA,EAAW,KAAK,CAC3B,CAAO,EAEE,KAAKM,GAAkB,CACtBC,EAAS,KAAK,CACZ,MAAO,GACP,aAAc,QACd,QAAS,0BAA0BD,CAAc,KACjD,YAAa,KACb,gBAAiB,UACjB,SAAU,WACV,aAAc,GACd,QAAS,GACrB,CAAW,CACX,CAAS,EACA,MAAME,GAAiB,CACtBD,EAAS,KAAK,CACZ,MAAO,GACP,aAAc,QACd,QAAS,yBAAyBC,CAAa,KAC/C,YAAa,KACb,gBAAiB,UACjB,SAAU,WACV,QAAS,GACrB,CAAW,CACX,CAAS,EAGHD,EAAS,KAAK,CACZ,QAAS,oDACT,gBAAiB,SACjB,aAAc,QACd,YAAa,KACb,SAAU,UAClB,CAAO,EAIHA,EAAS,KAAK,CACZ,QAAS,4CACT,gBAAiB,SACjB,aAAc,QACd,YAAa,KACb,SAAU,UAChB,CAAK,CAEL,CAAC"}